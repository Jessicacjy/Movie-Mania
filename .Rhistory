sd.data <- scale(nci.data)
par(mfrow=c(1,3))
data.dist <- dist(sd.data)
plot(hclust(data.dist), labels=nci.labs, main='Complete Linkage', xlab='', sub='', ylab='')
plot(hclust(data.dist, method='average'), labels=nci.labs, main='Average Linkage',
xlab='', sub='', ylab='')
plot(hclust(data.dist, method='single'), labels=nci.labs, main='Single Linkage',
xlab='', sub='', ylab='')
par(mfrow=c(1,1))
par(mfrow=c(3,1))
data.dist <- dist(sd.data)
plot(hclust(data.dist), labels=nci.labs, main='Complete Linkage', xlab='', sub='', ylab='')
plot(hclust(data.dist, method='average'), labels=nci.labs, main='Average Linkage',
xlab='', sub='', ylab='')
plot(hclust(data.dist, method='single'), labels=nci.labs, main='Single Linkage',
xlab='', sub='', ylab='')
par(mfrow=c(1,1))
par(mfrow=c(1,3))
data.dist <- dist(sd.data)
plot(hclust(data.dist), labels=nci.labs, main='Complete Linkage', xlab='', sub='', ylab='')
plot(hclust(data.dist, method='average'), labels=nci.labs, main='Average Linkage',
xlab='', sub='', ylab='')
plot(hclust(data.dist, method='single'), labels=nci.labs, main='Single Linkage',
xlab='', sub='', ylab='')
par(mfrow=c(1,1))
hc.out <- hclust(dist(sd.data))
hc.clusters <- cutree(hc.out, 4)
table(hc.clusters, nci.labs)
plot(hc.out, labels = nci.labs)
abline(h=139, col='red')
hc.out
set.seed(2)
km.out <- kmeans(sd.data, 4, nstart = 20)
km.clusters <- km.out$cluster
table(km.clusters, hc.clusters)
hc.out <- hclust(dist(pr.out$x[,1:5]))
plot(hc.out, labels=nci.labs, main='Hier. Clust. on First Five Score Vectors')
table(cutree(hc.out, 4), nci.labs)
install.packages('RServe')
install.packages('Rserve')
install.packages()
install.packages('archetypeanalysis')
install.packages('archetypes')
library(archetypes)
archetypes.predict
?archetypes.predict
?predict
?predict.archetypes
?summary.stepArchetypes
?predict.steparchetypes
?predict.stepArchetypes
movie_data <- read.csv("network_data.csv", header = TRUE)
head(movie_data)
# Get nodes for the graph
nrow(movie_data)
length(unique(movie_data$director_name))
length(unique(movie_data$actor_name))
dir_nodes <- cbind(as.character(movie_data$director_name), movie_data$director_facebook_likes)
actor_nodes <- cbind(as.character(movie_data$actor_name), movie_data$actor_facbook_likes)
nodes <- rbind(dir_nodes, actor_nodes)
nodes <- unique(nodes)
nrow(nodes)
nodes_df <- data.frame(id=nodes[,1], likes=nodes[,2])
write.csv(nodes_df, "person.csv", row.names = FALSE)
# Get links for the graph
links_df <- data.frame(source=as.character(movie_data$director_name), target=as.character(movie_data$actor_name))
x <- data.frame(table(links_df$source, links_df$target))
setwd("C:/Users/deepf/Google Drive - NU/Courses/Spring Quarter 2017/411 - Data Viz/Project/Network Diagram")
movie_data <- read.csv("network_data.csv", header = TRUE)
head(movie_data)
# Get nodes for the graph
nrow(movie_data)
length(unique(movie_data$director_name))
length(unique(movie_data$actor_name))
dir_nodes <- cbind(as.character(movie_data$director_name), movie_data$director_facebook_likes)
actor_nodes <- cbind(as.character(movie_data$actor_name), movie_data$actor_facbook_likes)
nodes <- rbind(dir_nodes, actor_nodes)
nodes <- unique(nodes)
nrow(nodes)
nodes_df <- data.frame(id=nodes[,1], likes=nodes[,2])
write.csv(nodes_df, "person.csv", row.names = FALSE)
# Get links for the graph
links_df <- data.frame(source=as.character(movie_data$director_name), target=as.character(movie_data$actor_name))
x <- data.frame(table(links_df$source, links_df$target))
nrow(x)
x <- data.frame(table(links_df$source))
nrow(x)
x
?paste
x <- data.frame(table(paste(links_df$source, links_df$target, sep=" "))
)
nrow(x)
head(x)
unique(movie_data$content_rating)
which(movie_data$content_rating == 'TV')
which(movie_data$content_rating == 'TV-PG')
?greps
?grepl
which(grepl('TV.*', movie_data$content_rating))
length(which(grepl('TV.*', movie_data$content_rating)))
unique(movie_data$content_rating)
length(which(movie_data$director_name = ''))
length(which(movie_data$director_name == ''))
unique(movie_data$content_rating[which(movie_data$director_name == '')])
head(movie_data[which(movie_data$director_name == '' && movie_data$content_rating == '')])
head(movie_data[which(movie_data$director_name == '' && movie_data$content_rating == ''),])
head(movie_data[which(movie_data$director_name == '' | movie_data$content_rating == ''),])
head(movie_data[which(movie_data$director_name == '' | movie_data$content_rating == ''), c(1:5)])
head(movie_data[which(movie_data$director_name == '' & movie_data$content_rating == ''), c(1:5)])
head(movie_data[which(movie_data$director_name == '' & movie_data$content_rating == ''), ])
length(is.na(movie_data$director_name))
length(is.na(movie_data$director_name) == TRUE)
length(which(is.na(movie_data$director_name)))
movie_data <- movie_data[-which(movie_data$director_name == ''),]
nrow(movie_data)
movie_data <- read.csv("network_data.csv", header = TRUE)
head(movie_data)
# Remove TV data
movie_data <- movie_data[-which(movie_data$director_name == ''),]
# Get nodes for the graph
nrow(movie_data)
length(unique(movie_data$director_name))
length(unique(movie_data$actor_name))
dir_nodes <- cbind(as.character(movie_data$director_name), movie_data$director_facebook_likes)
actor_nodes <- cbind(as.character(movie_data$actor_name), movie_data$actor_facbook_likes)
nodes <- rbind(dir_nodes, actor_nodes)
nodes <- unique(nodes)
nrow(nodes)
nodes_df <- data.frame(id=nodes[,1], likes=nodes[,2])
write.csv(nodes_df, "person.csv", row.names = FALSE)
links_df <- data.frame(source=as.character(movie_data$director_name), target=as.character(movie_data$actor_name))
x <- data.frame(table(paste(links_df$source, links_df$target, sep=" ")))
head(x)
tail(x)
View(x)
movie_data$dir_actor <- paste(movie_data$director_name, movie_data$actor_name, sep = " ")
setwd("C:/Users/deepf/Google Drive - NU/Courses/Spring Quarter 2017/411 - Data Viz/Project/Network Diagram")
movie_data <- read.csv("network_data.csv", header = TRUE)
subset = TRUE
if (subset) {
movie_data <- movie_data[1:999,]
}
which(movie_data$director_name == '')
movie_data[-which(movie_data$director_name == ''),]
nrow(movie_data)
movie_data <- movie_data[-which(movie_data$director_name == ''),]
nrow(movie_data)
x <- aggregate(movie_data$director_name, by=list(movie_data$director_name), function(x) length(x)/3)
colnames(x) <- c('director_name', 'dir_movie_count')
movie_data <- merge(movie_data, x, by='director_name', all.x=TRUE)
nrow(movie_data)
which(movie_data$actor_name == '')
movie_data <- movie_data[-which(movie_data$actor_name == ''),]
x <- aggregate(movie_data$actor_name, by=list(movie_data$actor_name), function(x) length(x))
colnames(x) <- c('actor_name', 'actor_movie_count')
movie_data <- merge(movie_data, x, by='actor_name', all.x=TRUE)
movie_data <- movie_data[-which(movie_data$actor_name == ''),]
movie_data <- read.csv("network_data.csv", header = TRUE)
subset = TRUE
if (subset) {
movie_data <- movie_data[1:999,]
}
movie_data <- movie_data[-which(movie_data$director_name == ''),]
x <- aggregate(movie_data$director_name, by=list(movie_data$director_name), function(x) length(x)/3)
colnames(x) <- c('director_name', 'dir_movie_count')
movie_data <- merge(movie_data, x, by='director_name', all.x=TRUE)
movie_data <- movie_data[-which(movie_data$actor_name == ''),]
x <- aggregate(movie_data$actor_name, by=list(movie_data$actor_name), function(x) length(x))
colnames(x) <- c('actor_name', 'actor_movie_count')
movie_data <- merge(movie_data, x, by='actor_name', all.x=TRUE)
nrow(movie_data)
movie_data$dir_actor <- paste(movie_data$director_name, movie_data$actor_name, sep = " ")
x <- aggregate(movie_data$dir_actor, by=list(movie_data$dir_actor), function(x) length(x))
colnames(x) <- c('dir_actor', 'strength')
movie_data <- merge(movie_data, x, by='dir_actor', all.x=TRUE)
nrow(movie_data)
nrow(movie_data)
length(unique(movie_data$director_name))
length(unique(movie_data$actor_name))
dir_nodes <- cbind(as.character(movie_data$director_name), movie_data$dir_movie_count)
actor_nodes <- cbind(as.character(movie_data$actor_name), movie_data$actor_movie_count)
nodes <- rbind(dir_nodes, actor_nodes)
nodes <- unique(nodes)
nrow(nodes)
nodes_df <- data.frame(id=nodes[,1], movie_count=nodes[,2])
write.csv(nodes_df, "person.csv", row.names = FALSE)
link <- data.frame(source=as.character(movie_data$director_name), target=as.character(movie_data$actor_name),
strength=movie_data$strength)
link <- unique(link)
write.csv(link, "links.csv", row.names = FALSE)
nrow(link)
network <- list(nodes=nodes_df, links=link)
json_file <- toJSON(network, pretty = TRUE)
write(json_file, "network.json")
library(jsonlite)
json_file <- toJSON(network, pretty = TRUE)
write(json_file, "network.json")
movie_data <- read.csv("network_data.csv", header = TRUE)
subset = TRUE
# Subset for testing
if (subset) {
movie_data <- movie_data[1:999,]
}
# Remove data with missing director
movie_data <- movie_data[-which(movie_data$director_name == ''),]
# Calculate no.of movies per director
x <- aggregate(movie_data$director_name, by=list(movie_data$director_name), function(x) length(x)/3)
colnames(x) <- c('director_name', 'dir_movie_count')
movie_data <- merge(movie_data, x, by='director_name', all.x=TRUE)
# Remove data with missing actor
movie_data <- movie_data[-which(movie_data$actor_name == ''),]
# Calculate no.of movies per actor
x <- aggregate(movie_data$actor_name, by=list(movie_data$actor_name), function(x) length(x))
colnames(x) <- c('actor_name', 'actor_movie_count')
movie_data <- merge(movie_data, x, by='actor_name', all.x=TRUE)
# Calculate dir_actor occurences
movie_data$dir_actor <- paste(movie_data$director_name, movie_data$actor_name, sep = " ")
x <- aggregate(movie_data$dir_actor, by=list(movie_data$dir_actor), function(x) length(x))
colnames(x) <- c('dir_actor', 'strength')
movie_data <- merge(movie_data, x, by='dir_actor', all.x=TRUE)
nrow(movie_data)
length(unique(movie_data$director_name))
length(unique(movie_data$actor_name))
dir_nodes <- cbind(as.character(movie_data$director_name), movie_data$dir_movie_count, 'Director')
colnames(dir_nodes)
View(dir_nodes)
actor_nodes <- cbind(as.character(movie_data$actor_name), movie_data$actor_movie_count, 'Actor')
nodes <- rbind(dir_nodes, actor_nodes)
nodes <- unique(nodes)
nrow(nodes)
nodes_df <- data.frame(id=nodes[,1], movie_count=nodes[,2], type=nodes[,3])
write.csv(nodes_df, "person.csv", row.names = FALSE)
link <- data.frame(source=as.character(movie_data$director_name), target=as.character(movie_data$actor_name),
strength=movie_data$strength)
link <- unique(link)
write.csv(link, "links.csv", row.names = FALSE)
# Create the JSON file
network <- list(nodes=nodes_df, links=link)
json_file <- toJSON(network, pretty = TRUE)
write(json_file, "network.json")
class(dir_nodes)
intersect(dir_nodes[,1], actor_nodes[,1])
which(nodes_df$id == 'Jon Favreau')
nodes_df[which(nodes_df$id == 'Jon Favreau'),]
movie_data <- read.csv("network_data.csv", header = TRUE)
subset = TRUE
if (subset) {
movie_data <- movie_data[1:999,]
}
movie_data <- movie_data[-which(movie_data$director_name == ''),]
x <- aggregate(movie_data$director_name, by=list(movie_data$director_name), function(x) length(x)/3)
colnames(x) <- c('director_name', 'dir_movie_count')
class(x)
class(x$dir_movie_count)
movie_data <- merge(movie_data, x, by='director_name', all.x=TRUE)
class(movie_data$dir_movie_count)
movie_data <- movie_data[-which(movie_data$actor_name == ''),]
x <- aggregate(movie_data$actor_name, by=list(movie_data$actor_name), function(x) length(x))
colnames(x) <- c('actor_name', 'actor_movie_count')
movie_data <- merge(movie_data, x, by='actor_name', all.x=TRUE)
class(movie_data$actor_movie_count)
class(movie_data$dir_movie_count)
movie_data$dir_actor <- paste(movie_data$director_name, movie_data$actor_name, sep = " ")
x <- aggregate(movie_data$dir_actor, by=list(movie_data$dir_actor), function(x) length(x))
colnames(x) <- c('dir_actor', 'strength')
movie_data <- merge(movie_data, x, by='dir_actor', all.x=TRUE)
class(movie_data$strength)
nrow(movie_data)
length(unique(movie_data$director_name))
length(unique(movie_data$actor_name))
dir_nodes <- cbind(as.character(movie_data$director_name), movie_data$dir_movie_count, 'Director')
class(dir_nodes[,2])
class(movie_data$dir_movie_count)
dir_nodes <- cbind(as.character(movie_data$director_name), as.numeric(movie_data$dir_movie_count), 'Director')
class(dir_nodes[,2])
dir_nodes <- cbind(as.character(movie_data$director_name), movie_data$dir_movie_count, 'Director')
class(dir_nodes[,2])
actor_nodes <- cbind(as.character(movie_data$actor_name), movie_data$actor_movie_count, 'Actor')
class(actor_nodes[,2])
nodes <- rbind(dir_nodes, actor_nodes)
nodes <- unique(nodes)
nrow(nodes)
nodes_df <- data.frame(id=nodes[,1], movie_count=nodes[,2], type=nodes[,3])
class(nodes_df$movie_count)
nodes_df <- data.frame(id=nodes[,1], movie_count=as.numeric(nodes[,2]), type=nodes[,3])
class(nodes_df$movie_count)
write.csv(nodes_df, "person.csv", row.names = FALSE)
link <- data.frame(source=as.character(movie_data$director_name), target=as.character(movie_data$actor_name),
strength=movie_data$strength)
link <- unique(link)
write.csv(link, "links.csv", row.names = FALSE)
network <- list(nodes=nodes_df, links=link)
json_file <- toJSON(network, pretty = TRUE)
write(json_file, "network.json")
intersect(dir_nodes,actor_nodes)
intersect(movie_data$director_name,movie_data$actor_name)
which(intersect(movie_data$director_name,movie_data$actor_name))
which(movie_data$director_name %in% intersect(movie_data$director_name,movie_data$actor_name))
movie_data[which(movie_data$director_name %in% intersect(movie_data$director_name,movie_data$actor_name)),]
movie_data[which(movie_data$actor_name %in% intersect(movie_data$director_name,movie_data$actor_name)),]
actor_dir_intersect <- which(movie_data$actor_name %in% intersect(movie_data$director_name,movie_data$actor_name))
actor_dir_intersect
movie_data$actor_name[actor_dir_intersect] + ' (A)'
as.character(movie_data$actor_name[actor_dir_intersect]) + ' (A)'
paste(as.character(movie_data$actor_name[actor_dir_intersect]), '(A)')
movie_data$actor_name[actor_dir_intersect] <- paste(as.character(movie_data$actor_name[actor_dir_intersect]), '(Ac)')
paste(as.character(movie_data$actor_name[actor_dir_intersect]), '(Ac)')
actor_dir_intersect <- which(movie_data$actor_name %in% intersect(movie_data$director_name,movie_data$actor_name))
actor_dir_intersect
movie_data <- read.csv("network_data.csv", header = TRUE)
subset = TRUE
# Subset for testing
if (subset) {
movie_data <- movie_data[1:999,]
}
# Remove data with missing director
movie_data <- movie_data[-which(movie_data$director_name == ''),]
# Calculate no.of movies per director
x <- aggregate(movie_data$director_name, by=list(movie_data$director_name), function(x) length(x)/3)
colnames(x) <- c('director_name', 'dir_movie_count')
movie_data <- merge(movie_data, x, by='director_name', all.x=TRUE)
# Remove data with missing actor
movie_data <- movie_data[-which(movie_data$actor_name == ''),]
# Calculate no.of movies per actor
x <- aggregate(movie_data$actor_name, by=list(movie_data$actor_name), function(x) length(x))
colnames(x) <- c('actor_name', 'actor_movie_count')
movie_data <- merge(movie_data, x, by='actor_name', all.x=TRUE)
# Calculate dir_actor occurences
movie_data$dir_actor <- paste(movie_data$director_name, movie_data$actor_name, sep = " ")
x <- aggregate(movie_data$dir_actor, by=list(movie_data$dir_actor), function(x) length(x))
colnames(x) <- c('dir_actor', 'strength')
movie_data <- merge(movie_data, x, by='dir_actor', all.x=TRUE)
# View(movie_data)
# Get nodes for the graph
nrow(movie_data)
length(unique(movie_data$director_name))
length(unique(movie_data$actor_name))
actor_dir_intersect <- which(movie_data$actor_name %in% intersect(movie_data$director_name,movie_data$actor_name))
actor_dir_intersect
movie_data$actor_name <- as.character(movie_data$actor_name)
movie_data$actor_name[actor_dir_intersect] <- paste(movie_data$actor_name[actor_dir_intersect], '(Ac)')
movie_data[actor_dir_intersect,]
movie_data <- read.csv("network_data.csv", header = TRUE)
subset = TRUE
# Subset for testing
if (subset) {
movie_data <- movie_data[1:999,]
}
# Remove data with missing director
movie_data <- movie_data[-which(movie_data$director_name == ''),]
# Differentiate between persons in both Director and Actor role
actor_dir_intersect <- which(movie_data$actor_name %in% intersect(movie_data$director_name,movie_data$actor_name))
movie_data$actor_name <- as.character(movie_data$actor_name)
movie_data$actor_name[actor_dir_intersect] <- paste(movie_data$actor_name[actor_dir_intersect], '(Ac)')
# Calculate no.of movies per director
x <- aggregate(movie_data$director_name, by=list(movie_data$director_name), function(x) length(x)/3)
colnames(x) <- c('director_name', 'dir_movie_count')
movie_data <- merge(movie_data, x, by='director_name', all.x=TRUE)
# Remove data with missing actor
movie_data <- movie_data[-which(movie_data$actor_name == ''),]
# Calculate no.of movies per actor
x <- aggregate(movie_data$actor_name, by=list(movie_data$actor_name), function(x) length(x))
colnames(x) <- c('actor_name', 'actor_movie_count')
movie_data <- merge(movie_data, x, by='actor_name', all.x=TRUE)
# Calculate dir_actor occurences
movie_data$dir_actor <- paste(movie_data$director_name, movie_data$actor_name, sep = " ")
x <- aggregate(movie_data$dir_actor, by=list(movie_data$dir_actor), function(x) length(x))
colnames(x) <- c('dir_actor', 'strength')
movie_data <- merge(movie_data, x, by='dir_actor', all.x=TRUE)
# View(movie_data)
nrow(movie_data)
length(unique(movie_data$director_name))
length(unique(movie_data$actor_name))
dir_nodes <- cbind(as.character(movie_data$director_name), movie_data$dir_movie_count, 'Director')
actor_nodes <- cbind(as.character(movie_data$actor_name), movie_data$actor_movie_count, 'Actor')
nodes <- rbind(dir_nodes, actor_nodes)
nodes <- unique(nodes)
nrow(nodes)
nodes_df <- data.frame(id=nodes[,1], movie_count=as.numeric(nodes[,2]), type=nodes[,3])
write.csv(nodes_df, "person.csv", row.names = FALSE)
link <- data.frame(source=as.character(movie_data$director_name), target=as.character(movie_data$actor_name),
strength=movie_data$strength)
link <- unique(link)
write.csv(link, "links.csv", row.names = FALSE)
nrow(link)
network <- list(nodes=nodes_df, links=link)
json_file <- toJSON(network, pretty = TRUE)
write(json_file, "network.json")
significant_dir <- unique(movie_data$director_name[which(movie_data$strength > 1),])
significant_dir <- unique(movie_data$director_name[which(movie_data$strength > 1)])
length(significant_dir)
significant_dir
which(movie_data$director_name %in% significant_dir)
length(which(movie_data$director_name %in% significant_dir))
movie_data <- movie_data[which(movie_data$director_name %in% significant_dir),]
nrow(movie_data)
movie_data <- read.csv("network_data.csv", header = TRUE)
movie_data <- read.csv("network_data.csv", header = TRUE)
subset = FALSE
if (subset) {
movie_data <- movie_data[1:999,]
}
movie_data <- movie_data[-which(movie_data$director_name == ''),]
nrow(movie_data)
actor_dir_intersect <- which(movie_data$actor_name %in% intersect(movie_data$director_name,movie_data$actor_name))
movie_data$actor_name <- as.character(movie_data$actor_name)
movie_data$actor_name[actor_dir_intersect] <- paste(movie_data$actor_name[actor_dir_intersect], '(Ac)')
nrow(movie_data)
x <- aggregate(movie_data$director_name, by=list(movie_data$director_name), function(x) length(x)/3)
colnames(x) <- c('director_name', 'dir_movie_count')
movie_data <- merge(movie_data, x, by='director_name', all.x=TRUE)
movie_data <- movie_data[-which(movie_data$actor_name == ''),]
x <- aggregate(movie_data$actor_name, by=list(movie_data$actor_name), function(x) length(x))
colnames(x) <- c('actor_name', 'actor_movie_count')
movie_data <- merge(movie_data, x, by='actor_name', all.x=TRUE)
nrow(movie_data)
movie_data$dir_actor <- paste(movie_data$director_name, movie_data$actor_name, sep = " ")
x <- aggregate(movie_data$dir_actor, by=list(movie_data$dir_actor), function(x) length(x))
colnames(x) <- c('dir_actor', 'strength')
movie_data <- merge(movie_data, x, by='dir_actor', all.x=TRUE)
nrow(movie_data)
significant_dir <- unique(movie_data$director_name[which(movie_data$strength > 1)])
movie_data <- movie_data[which(movie_data$director_name %in% significant_dir),]
nrow(movie_data)
length(unique(movie_data$director_name))
length(unique(movie_data$actor_name))
library(jsonlite)
movie_data <- read.csv("network_data.csv", header = TRUE)
subset = TRUE
# Remove data with missing director
movie_data <- movie_data[-which(movie_data$director_name == ''),]
# Differentiate between persons in both Director and Actor role
actor_dir_intersect <- which(movie_data$actor_name %in% intersect(movie_data$director_name,movie_data$actor_name))
movie_data$actor_name <- as.character(movie_data$actor_name)
movie_data$actor_name[actor_dir_intersect] <- paste(movie_data$actor_name[actor_dir_intersect], '(Ac)')
# Calculate no.of movies per director
x <- aggregate(movie_data$director_name, by=list(movie_data$director_name), function(x) length(x)/3)
colnames(x) <- c('director_name', 'dir_movie_count')
movie_data <- merge(movie_data, x, by='director_name', all.x=TRUE)
# Remove data with missing actor
movie_data <- movie_data[-which(movie_data$actor_name == ''),]
# Calculate no.of movies per actor
x <- aggregate(movie_data$actor_name, by=list(movie_data$actor_name), function(x) length(x))
colnames(x) <- c('actor_name', 'actor_movie_count')
movie_data <- merge(movie_data, x, by='actor_name', all.x=TRUE)
# Calculate dir_actor occurences
movie_data$dir_actor <- paste(movie_data$director_name, movie_data$actor_name, sep = " ")
x <- aggregate(movie_data$dir_actor, by=list(movie_data$dir_actor), function(x) length(x))
colnames(x) <- c('dir_actor', 'strength')
movie_data <- merge(movie_data, x, by='dir_actor', all.x=TRUE)
# Find directors with strength > 1
significant_dir <- unique(movie_data$director_name[which(movie_data$strength > 1)])
movie_data <- movie_data[which(movie_data$director_name %in% significant_dir),]
# Subset for testing
if (subset) {
movie_data <- movie_data[1:1000,]
}
# Get nodes for the graph
nrow(movie_data)
length(unique(movie_data$director_name))
length(unique(movie_data$actor_name))
dir_nodes <- cbind(as.character(movie_data$director_name), movie_data$dir_movie_count, 'Director')
actor_nodes <- cbind(as.character(movie_data$actor_name), movie_data$actor_movie_count, 'Actor')
nodes <- rbind(dir_nodes, actor_nodes)
nodes <- unique(nodes)
nrow(nodes)
nodes_df <- data.frame(id=nodes[,1], movie_count=as.numeric(nodes[,2]), type=nodes[,3])
write.csv(nodes_df, "person.csv", row.names = FALSE)
# Get links for the graph
link <- data.frame(source=as.character(movie_data$director_name), target=as.character(movie_data$actor_name),
strength=movie_data$strength)
link <- unique(link)
nrow(link)
write.csv(link, "links.csv", row.names = FALSE)
# Create the JSON file
network <- list(nodes=nodes_df, links=link)
json_file <- toJSON(network, pretty = TRUE)
write(json_file, "network.json")
View(movie_data)
raw_movie <- read.csv("network_data.csv", header = TRUE)
View(raw_movie)
library(jsonlite)
movie_data <- read.csv("network_data.csv", header = TRUE)
subset = FALSE
# Remove data with missing director
movie_data <- movie_data[-which(movie_data$director_name == ''),]
# Differentiate between persons in both Director and Actor role
actor_dir_intersect <- which(movie_data$actor_name %in% intersect(movie_data$director_name,movie_data$actor_name))
movie_data$actor_name <- as.character(movie_data$actor_name)
movie_data$actor_name[actor_dir_intersect] <- paste(movie_data$actor_name[actor_dir_intersect], '(Ac)')
# Calculate no.of movies per director
x <- aggregate(movie_data$director_name, by=list(movie_data$director_name), function(x) length(x)/3)
colnames(x) <- c('director_name', 'dir_movie_count')
movie_data <- merge(movie_data, x, by='director_name', all.x=TRUE)
# Remove data with missing actor
movie_data <- movie_data[-which(movie_data$actor_name == ''),]
# Calculate no.of movies per actor
x <- aggregate(movie_data$actor_name, by=list(movie_data$actor_name), function(x) length(x))
colnames(x) <- c('actor_name', 'actor_movie_count')
movie_data <- merge(movie_data, x, by='actor_name', all.x=TRUE)
# Calculate dir_actor occurences
movie_data$dir_actor <- paste(movie_data$director_name, movie_data$actor_name, sep = " ")
x <- aggregate(movie_data$dir_actor, by=list(movie_data$dir_actor), function(x) length(x))
colnames(x) <- c('dir_actor', 'strength')
movie_data <- merge(movie_data, x, by='dir_actor', all.x=TRUE)
# Find directors with strength > 1
significant_dir <- unique(movie_data$director_name[which(movie_data$strength > 1)])
movie_data <- movie_data[which(movie_data$director_name %in% significant_dir),]
# Subset for testing
if (subset) {
movie_data <- movie_data[1:1000,]
}
